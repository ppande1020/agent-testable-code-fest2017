#!/usr/bin/env groovy

def passed = false

try 
{
	properties([parameters([string(defaultValue: 'release', description: 'Type of build: release or debug', name: 'buildType'),
	                        booleanParam(defaultValue: false, description:'''Develop and Master always copy to blob.
Check this if you want to copy files to blob from a different branch''', name: 'copyToBlob'),
							string(defaultValue: 'test', description: 'Machine onto which we will deploy the package', name: 'deploymentEnvironment'),
							string(defaultValue: '', description: '', name: 'azureCredentialId'),
							])])
	def type = params.buildType
	
node('master') {
 def shallow_clone_git_repo(String branch, String gitURL){
	    checkout([$class: 'GitSCM', 
                branches: [[name: branch]], 
                doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], 
                userRemoteConfigs: [[url: gitURL]]])
				bat 'echo checkout complete'
	   }
         def location = ".\\RelativityAgent1\\RelativityAgent.sln"
        
		
        stage('Stage Checkout') {
	            shallow_clone_git_repo('master', 'https://github.com/relativitydev/agent-testable-code-fest2017.git')
        }
		
		bat 'echo before utilites'
		def	utilites = load ("Utilities.groovy")
		bat 'echo after utilites'
		
        stage('Stage build'){
                fileExists location
				
				bat 'echo build command starting'
				echo location
			    echo type
				bat "powershell.exe \"& {.\\build.ps1 Compile -configuration ${type};exit \$lastexitcode}\""
			    bat 'echo build command done'
        }
		stage('Stage Unit Test'){
				bat "powershell.exe \"& {.\\build.ps1 UnitTest}\""
       }
	   stage('Stage Integration Test'){
				bat "powershell.exe \"& {.\\build.ps1 IntegrationTest}\""
       }
	   }
}
	   
finally
{
	if (!passed) 
	{
		mail (
			subject: "FAILURE: Job '${env.JOB_NAME} [${versionNumber}]'",
			body: "FAILURE: Job '${env.JOB_NAME} [${versionNumber}]': Check console output at ${env.BUILD_URL}",
			to: 'dbero@kcura.com, plembke@kcura.com, mhill@kcura.com, mjassal@kcura.com, abrottman@kcura.com, clowe@kcura.com, kaerabati@kcura.com, mpatterson@kcura.com, carreola@kcura.com, zjohnson@kcura.com'
		)
	}
	if (passed) 
	{
		
	}
}

	   
	   
