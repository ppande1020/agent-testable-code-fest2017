#!/usr/bin/env groovy

def passed = false

try 
{
	properties([parameters([string(defaultValue: 'debug', description: 'Type of build: release or debug', name: 'buildType'),string(defaultValue: '192.168.137.68/Relativity', description: 'RSAPI Address', name: 'RSAPIServerAddress'), string(defaultValue: '192.168.137.68/Relativity', description: 'REST Address', name: 'RESTServerAddress'), string(defaultValue: 'relativity.admin@kcura.com', description: 'Relativity UserName', name: 'AdminUsername'), string(defaultValue: 'Test1234!', description: 'Relativity Password', name: 'AdminPassword') ])])
	def type = params.buildType
	
node('master') {

         def location = ".\\RelativityAgent1\\RelativityAgent.sln"
        
		
        stage('Stage Checkout') {	  
                checkout([$class: 'GitSCM', 
                branches: [[name: 'master']], 
                doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], 
                userRemoteConfigs: [[url: 'https://github.com/relativitydev/agent-testable-code-fest2017.git']]])
				bat 'echo checkout complete'
    
        }
		
	
		stage('Create app config'){
			bat 'echo create config start'
			create_nunit_app_config()
			bat 'echo config created'
    }
        stage('Stage build'){
                fileExists location
				
				bat 'echo build command starting'
				echo location
			    echo type
				bat "powershell.exe \"& {.\\build.ps1 Compile -configuration ${type};exit \$lastexitcode}\""
			    bat 'echo build command done'
        }
		stage('Stage Unit Test'){
				bat "powershell.exe \"& {.\\build.ps1 UnitTest}\""
       }
	   stage('Stage Integration Test'){
				bat "powershell.exe \"& {.\\build.ps1 IntegrationTest}\""
       }
	   }
}
	   
finally
{
	if (!passed) 
	{
		mail (
			subject: "FAILURE: Job '${env.JOB_NAME}'",
			body: "FAILURE: Job '${env.JOB_NAME}': Check console output at ${env.BUILD_URL}",
			to: 'priyanka.pande@relativity.com'
		)
	}
	if (passed) 
	{
		
	}
}


def create_nunit_app_config() {
    
    def smoke_template = readFile 'C:\Program Files (x86)\Jenkins\workspace\Build stuff 4\RelativityAgent1\AgentNunitIntegrationTest\app.config'
    
    smoke_template = smoke_template.replace('$AdminPassword', params.AdminPassword.toString())
    smoke_template = smoke_template.replace('$AdminUsername', params.AdminUsername)
    smoke_template = smoke_template.replace('$RESTServerAddress', params.RESTServerAddress)
    smoke_template = smoke_template.replace('$RSAPIServerAddress', params.RSAPIServerAddress)
    
    retry(3) {
        writeFile file: "C:/${params.ProjectName}/${params.AssemblyName}.dll.config", text: smoke_template
    }    
}

	   
	   
